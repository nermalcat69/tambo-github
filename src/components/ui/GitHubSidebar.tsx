"use client";

import { GitHubRepo, GitHubIssue, GitHubPR } from "@/lib/types";
import { Star, GitFork, Eye, Settings, ExternalLink } from "lucide-react";

interface GitHubSidebarProps {
  selectedRepo?: GitHubRepo | null;
  repositories?: GitHubRepo[];
  issues?: GitHubIssue[];
  prs?: GitHubPR[];
  onRepoSelect?: (repo: GitHubRepo) => void;
}

export function GitHubSidebar({
  selectedRepo,
  repositories: _repositories = [],
  issues: _issues = [],
  prs: _prs = [],
  onRepoSelect: _onRepoSelect
}: GitHubSidebarProps) {
  // Suppress unused variable warnings - these will be used when implementing actual functionality
  void _repositories;
  void _issues;
  void _prs;
  void _onRepoSelect;
  const formatNumber = (num: number | undefined) => {
    if (num == null || num === undefined) {
      return '0';
    }
    if (num >= 1000) {
      return `${(num / 1000).toFixed(1)}k`;
    }
    return num.toString();
  };

  return (
    <div className="h-full flex flex-col bg-gray-50 border-l border-gray-200">
      {/* Header */}
      <div className="p-4 border-b border-gray-200 bg-white">
        <div className="flex items-center justify-between mb-3">
          <h2 className="font-semibold text-gray-900">Tambo Components</h2>
          <Settings className="w-4 h-4 text-gray-400 cursor-pointer hover:text-gray-600" />
        </div>
        <p className="text-sm text-gray-600">
          AI-generated components will appear here
        </p>
      </div>

      {/* Selected Repository Header */}
      {selectedRepo && (
        <div className="p-4 border-b border-gray-200 bg-white">
          <div className="flex items-start justify-between mb-3">
            <div className="flex-1 min-w-0">
              <h3 className="font-medium text-gray-900 truncate">
                {selectedRepo.name}
              </h3>
              <p className="text-sm text-gray-600 truncate">
                {selectedRepo.owner?.login || 'Unknown owner'}
              </p>
            </div>
            <a
              href={selectedRepo.html_url}
              target="_blank"
              rel="noopener noreferrer"
              className="text-gray-400 hover:text-gray-600"
            >
              <ExternalLink className="w-4 h-4" />
            </a>
          </div>

          {/* Repository Stats */}
          <div className="flex items-center space-x-2 text-xs text-gray-500">
            <div className="flex items-center space-x-1">
              <Star className="w-3 h-3" />
              <span>{formatNumber(selectedRepo.stargazers_count)}</span>
            </div>
            
            <div className="flex items-center space-x-1">
              <GitFork className="w-3 h-3" />
              <span>{formatNumber(selectedRepo.forks_count)}</span>
            </div>
            
            <div className="flex items-center space-x-1">
              <Eye className="w-3 h-3" />
              <span>{formatNumber(selectedRepo.watchers_count)}</span>
            </div>
          </div>


        </div>
      )}

      {/* Content - Clean space for Tambo components */}
      <div className="flex-1 overflow-y-auto p-4">
        <div className="h-full flex items-center justify-center">
          <div className="text-center text-gray-500">
            <div className="w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center">
              <svg className="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
              </svg>
            </div>
            <p className="text-sm font-medium mb-1">Ready for AI Components</p>
            <p className="text-xs">Components generated by Tambo will appear here</p>
          </div>
        </div>
      </div>
    </div>
  );
}